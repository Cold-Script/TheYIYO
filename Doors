if _G.ExecuteLimit then
print("Sorry, Execute Limit | YIYO")
return
end
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "üéÉ DOORS - Halloween",
    SubTitle = "| YIYO",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})
function notify(text, description, subcontent, time)
Fluent:Notify({
Title = text,
Content = description,
SubContent = subcontent,
Duration = time
})
end
notify("< ! > | YIYO Warning","Credits by yieviro92 and rechedmcvn","v1.0",5)
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "book" }),
    Exploit = Window:AddTab({ Title = "Exploits", Icon = "moon" }),
    Visual = Window:AddTab({ Title = "Visual", Icon = "eye" }),
    Setting = Window:AddTab({ Title = "Setting", Icon = "settings" })
}
Tabs.Main:AddSection("GamePlay")
Tabs.Main:AddDropdown("Dropdown", {
        Title = "Select Death",
        Description = "Ch·ªçn c√°i ch·∫øt",
        Values = {"Lobby", "Leave", "Revive", },
        Multi = false,
        Default = "...",
        Callback = function(v)
_G.SelectDeath = v
if game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectDeath == "Lobby" then
if _G.EnabledDeath then
game.ReplicatedStorage.EntityInfo.Lobby:FireServer()
game.ReplicatedStorage.RemoteFolder.Lobby:FireServer()
end
elseif game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectDeath == "Leave" then
if _G.EnabledDeath then
game:Shutdown()
end
elseif game.Players.LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectDeath == "Revive" then
if _G.EnabledDeath then
game.ReplicatedStorage.RemoteFolder.Revive:FireServer()
game.ReplicatedStorage.EntityInfo.Revive:FireServer()
end
end
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Enabled Death", 
	Default = false,
	Description = "Nh·∫≠n Ch·∫øt",
	Callback = function(v)
_G.EnabledDeath = v
end})
Tabs.Main:AddSection("Players")
Tabs.Main:AddSlider("Slider", {
        Title = "Running Speed",
        Description = "T·ªëc ƒë·ªô ch·∫°y",
        Default = 15,
        Min = 15,
        Max = 50,
        Rounding = 1,
        Callback = function(v)
        _G.Speed = v
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Running Speed", 
	Default = false,
	Description = "L·∫•y t·ªëc ƒë·ªô ƒë√£ ch·ªçn",
	Callback = function(v)
_G.EnabledSpeed = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledSpeed then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.Speed or 15
else
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 15
end
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Noclip", 
	Default = false,
	Description = "ƒêi xuy√™n t∆∞·ªùng",
	Callback = function(v)
_G.Noclip = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Collision.CanCollide = not _G.Noclip
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Jump", 
	Default = false,
	Description = "Nh·∫£y",
	Callback = function(v)
_G.Jump = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character:SetAttribute("CanJump", _G.Jump)
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "No Acceleration", 
	Default = false,
	Description = "Kh√¥ng tr∆°n tr∆∞·ª£t",
	Callback = function(v)
_G.NoSlow = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Head.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LowerTorso.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.UpperTorso.Massless = not _G.NoSlow;
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Slow Gravity", 
	Default = false,
	Description = "Gi·∫£m Tr·ªçng L·ª±c",
	Callback = function(v)
_G.SlowJump = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.SlowJump then
workspace.Gravity = 50
else
workspace.Gravity = 90
end
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Instance Interact", 
	Default = false,
	Description = "Kh√¥ng Ph·∫£i Gi·ªØ",
	Callback = function(v)
_G.InstanceInteract = v
if _G.InstanceInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
InstanceInteract = workspace.ChildAdded:Connect(function(v)
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end)
else
InstanceInteract:Disconnect()
end
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Noclip Interact", 
	Default = false,
	Description = "Nh·∫•n xuy√™n t∆∞·ªùng",
	Callback = function(v)
_G.CrossInteraction = v
game:GetService("Workspace").CurrentRooms.DescendantAdded:Connect(function(v)
if not _G.CrossInteraction then return end
if v:IsA("ProximityPrompt") then
if _G.CrossInteraction then
v.RequiresLineOfSight = false
else
v.RequiresLineOfSight = true
end
end
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Speed Bypass", 
	Default = false,
	Description = "T·ªëc ƒë·ªô ƒë∆∞·ª£c Bypass",
	Callback = function(v)
_G.SpeedBypass = v
if _G.SpeedBypass then
_G.Wait = 0.22
else
_G.Wait = 5
end
local character = game.Players.LocalPlayer.Character
local humanoid = character:FindFirstChildOfClass("Humanoid")
local speedBoost, speedBoostFinished, speed = 30, false, false
if bypass then
if collisionClone then collisionClone:Destroy() end
speed = true       
local originalSpeed = SpeedBypass
repeat task.wait()
if not SpeedBypass then
SpeedBypass:SetValue(true)
end
until speedBoostFinished
SpeedBypass:SetValue(originalSpeed)
else
if not collisionClone then
collisionClone = character.Collision:Clone() do
collisionClone.CanCollide = false
collisionClone.Massless = true
collisionClone.Name = "CollisionClone"
if collisionClone:FindFirstChild("CollisionCrouch") then
collisionClone.CollisionCrouch:Destroy()
end   
collisionClone.Parent = character    
end
end
task.spawn(function()  
while not speedBoostFinished do
collisionClone.Massless = not collisionClone.Massless
task.wait(_G.Wait or 5)
end           
collisionClone.Massless = true                  
end)
end
end})
if not game.ReplicatedStorage.GameData.Floor.Value == "Fools" then
Tabs.Main:AddToggle("GodmodeNoFools",{
	Title = "Godmode", 
	Default = false,
	Description = "B·∫•t t·ª≠",
	Callback = function(v)
if v then
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,2.65,0)
else
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,-2.65,0)
end
end})
elseif game.ReplicatedStorage.GameData.Floor.Value == "Fools" then
Tabs.Main:AddToggle("GodmodeFools",{
	Title = "Godmode", 
	Default = false,
	Description = "B·∫•t t·ª≠",
	Callback = function(v)
if v then
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,8,0)
else
local Collison = game.Players.LocalPlayer.Character:FindFirstChild("Collision")
Collison.Position = Collison.Position - Vector3.new(0,-8,0)
end
end})
end
Tabs.Main:AddSection("Miscarriage")
Tabs.Main:AddSlider("Slider", {
        Title = "Max Greed",
        Description = "T·ªëi ƒëa Tham Lam",
        Default = 0,
        Min = 0,
        Max = 5,
        Rounding = 1,
        Callback = function(v)
        _G.Greed = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer:SetAttribute("Greed", v)
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Reach Doors", 
	Default = false,
	Description = "M·ªü C·ª≠a Xa",
	Callback = function(v)
_G.ReachDoors = v
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.ReachDoors then 
game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door").ClientOpen:FireServer()
end 
end)
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Fast Doors", 
	Default = false,
	Description = "C·ª≠a nhanh",
	Callback = function(v)
_G.FastDoors = v
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastDoors then 
game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door"):SetAttribute("FastOpen", true)
end 
end)
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Fast Dupe", 
	Default = false,
	Description = "DUPE nhanh",
	Callback = function(v)
_G.FastDupe = v
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastDupe then 
game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("DoorFake"):SetAttribute("FastOpen", true)
end 
end)
end)
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Closets Exit Fix", 
	Default = false,
	Description = "Ch·ªó ·∫©n n·∫Øp d·ªÖ d√†ng ra v√†o",
	Callback = function(v)
_G.ClosetsExitFix = v
game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()
if _G.ClosetsExitFix and game.Players.LocalPlayer.Character:GetAttribute("Hiding")==true then 
game:GetService("ReplicatedStorage").EntityInfo.CamLock:FireServer()
end 
end)
end})
if not game.ReplicatedStorage.GameData.Floor.Value == "Mines" then
elseif not game.ReplicatedStorage.GameData.Floor.Value == "Backdoor" then
Tabs.Main:AddToggle("MyToggle",{
	Title = "Show Correct Door", 
	Default = false,
	Description = "Hi·ªán c·ª≠a ƒë√∫ng",
	Callback = function(v)
_G.ShowDoor = v
if _G.ShowDoor then
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "Door" and v.Parent.Name == "Door" then
v.Color = Color3.new(0,0.5) --129, 111, 100
v.Sign.Color = Color3.new(0,0.5) --161, 138, 126
v.Parent.Sign.Stinker.TextColor3 = Color3.new(0,0.5) --120, 103, 94
end
end
Showdoor = workspace.ChildAdded:Connect(function(v)
if v.Name == "Door" and v.Parent.Name == "Door" then
v.Color = Color3.new(0,0.5) --129, 111, 100
v.Sign.Color = Color3.new(0,0.5) --161, 138, 126
v.Parent.Sign.Stinker.TextColor3 = Color3.new(0,0.5) --120, 103, 94
end
end)
else
Showdoor:Disconnect()
end
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Show Dupe Door", 
	Default = false,
	Description = "Hi·ªán DUPE",
	Callback = function(v)
_G.ShowDupe = v
if _G.ShowDupe then
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "DoorFake" then
v.Door.Color = Color3.new(0.45) --129, 111, 100
v.Door.Sign.Color = Color3.new(0.45) --161, 138, 126
v.Sign.Stinker.Text = "DUPE"
v.Sign.Stinker.TextColor3 = Color3.new(0.5) --120, 103, 94
v.Sign.Stinker["Highlight"].Text = "DUPE"
v.Sign.Stinker["Shadow"].Text = "DUPE"
end
end
Showdupe = workspace.ChildAdded:Connect(function(v)
if v.Name == "DoorFake" then
v.Door.Color = Color3.new(0.45) --129, 111, 100
v.Door.Sign.Color = Color3.new(0.45) --161, 138, 126
v.Sign.Stinker.Text = "DUPE"
v.Sign.Stinker.TextColor3 = Color3.new(0.5) --120, 103, 94
v.Sign.Stinker["Highlight"].Text = "DUPE"
v.Sign.Stinker["Shadow"].Text = "DUPE"
end
end)
else
Showdupe:Disconnect()
end
end})
end
Tabs.Main:AddSection("Automation")
Tabs.Main:AddToggle("MyToggle",{
	Title = "Auto Padlock Unlock [50]", 
	Default = false,
	Description = "T·ª± ƒë·ªông gi·∫£i m√£ [50]",
	Callback = function(v)
local EntityInfo = game:GetService("ReplicatedStorage").EntityInfo or game:GetService("ReplicatedStorage").RemoteFolder
local Floor = game:GetService("ReplicatedStorage").GameData.Floor
local Paper = workspace:FindFirstChild("LibraryHintPaper",true) or workspace:FindFirstChild("LibraryHintPaperHard",true) or Players:FindFirstChild("LibraryHintPaper",true) or Players:FindFirstChild("LibraryHintPaperHard",true)
if not Paper then
notify("YIYO","Someone needs to have the Hint Paper to use this.","Need Paper",3)
return
end
local HintsNeeded = Floor.Value == "Fools" and 8 or 3
local Hints = 0
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
   if Collected:IsA("ImageLabel") then
      for _,Icon in pairs(Paper.UI:GetChildren()) do
          if tonumber(Icon.Name) then
             if Icon.ImageRectOffset == Collected.ImageRectOffset then
                Hints += 1
                end
               end
              end
             end
            end
           end
        if Hints < HintsNeeded then
            notify("YIYO","You need to collect at least " .. HintsNeeded - Hints .. " more correct hint" .. (Hints ~= 2 and "s" or "") .. " to use this.","Collect Book",3)
            return
        end
        local t = {}
        for i = 1, Floor.Value == "Hotel" and 5 or 10 do
            local Icon = Paper.UI[i]
            local Number = -1
            for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
                if Collected.Name == "Icon" then
                    if Collected.ImageRectOffset == Icon.ImageRectOffset then
                        Number = tonumber(Collected.TextLabel.Text)
                    end
                end
            end
            table.insert(t,Number)
        end
        for one=0,t[1]==-1 and 9 or 0 do
            for two=0,t[2]==-1 and 9 or 0 do
                for three=0,t[3]==-1 and 9 or 0 do
                    for four=0,t[4]==-1 and 9 or 0 do
                        for five=0,t[5]==-1 and 9 or 0 do
                            if Floor.Value == "Fools" then
                                for six=0,t[6]==-1 and 9 or 0 do
                                    for seven=0,t[7]==-1 and 9 or 0 do
                                        for eight=0,t[8]==-1 and 9 or 0 do
                                            for nine=0,t[9]==-1 and 9 or 0 do
                                                for ten=0,t[10]==-1 and 9 or 0 do
                                                    EntityInfo.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5])..(t[6]==-1 and six or t[6])..(t[7]==-1 and seven or t[7])..(t[8]==-1 and eight or t[8])..(t[9]==-1 and nine or t[9])..(t[10]==-1 and ten or t[10]))
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                EntityInfo.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5]))
                            end
                        end
                    end
                end
           end
      end
end})
Tabs.Main:AddToggle("MyToggle",{
	Title = "Auto Interact", 
	Default = false,
	Description = "T·ª± ƒë·ªông t∆∞∆°ng t√°c",
	Callback = function(v)
_G.AutoLoot = v
if v then
local function setup(room)
local function check(v)
if v:IsA("Model") then
if v.Name == "DrawerContainer" then
local knob = v:WaitForChild("Knobs")
if knob then
local prompt = knob:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(knob.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
end
elseif v.Name == "GoldPile" then
local prompt = v:WaitForChild("LootPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt) 
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name:sub(1,8) == "ChestBox" then
local prompt = v:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")
if not interactions then
task.spawn(function()
repeat task.wait(0.2)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
elseif v.Name == "RolltopContainer" then
local prompt = v:WaitForChild("ActivateEventPrompt")
local interactions = prompt:GetAttribute("Interactions")                       
if not interactions then
task.spawn(function()
repeat task.wait(0.1)
if game.Players.LocalPlayer:DistanceFromCharacter(v.PrimaryPart.Position) <= 12 then
fireproximityprompt(prompt)
end
until prompt:GetAttribute("Interactions") or not _G.AutoLoot
end)
end
end 
end
end
local subaddcon
subaddcon = room.DescendantAdded:Connect(function(v)
check(v) 
end)            
for i,v in pairs(room:GetDescendants()) do
check(v)
end            
task.spawn(function()
repeat task.wait() until not _G.AutoLoot
subaddcon:Disconnect() 
end)
end        
local addconnect
addconnect = workspace.CurrentRooms.ChildAdded:Connect(function(room)
setup(room)
end)        
for i,room in pairs(workspace.CurrentRooms:GetChildren()) do
if room:FindFirstChild("Assets") then
setup(room) 
end
end        
repeat task.wait() until not _G.AutoLoot
addconnect:Disconnect()
end
end})
